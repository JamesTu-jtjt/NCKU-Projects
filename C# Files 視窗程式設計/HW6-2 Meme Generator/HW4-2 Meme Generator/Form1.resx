<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MemePics.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>24, 19</value>
  </metadata>
  <data name="MemePics.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB+
        DQAAAk1TRnQBSQFMAgEBBQEAARABAAEQAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEABJMCmQJzBG4EmTAA
        BpMCcwRuBJMwAAUcAZMCcwRuBJMwAAOZA5MBcwNuAUsBbgQcMAAEkwKZAXMCbgJEAUsBkwOZMAABmQWT
        AUoBbgFEAQsBDAFEARwDkzAABZkBkwFEAUsDCwERAXMBmQKTMAAFmQEcAUQBbgQLAXMDmTAABZkBkwFu
        AXMBRAILAUMBkwOZMAABHAKTApkCbgFzAZMCRAEcBJkwAAHsAXMGbgEHAbwBHAGTARwCkwGZMAAFBwFu
        AXMCBwG8AhwB7AFzAm4wAAUHARwCBwHvAQcBkwUHMAAEmQEHAe8KBzAAAxwBkwIHAbwEBwG8BJkwAAlz
        BhwBkzAAAUMDDgJEARQDDgFvAW4BSgFJAkoBEwEUARMHFAETAm0CRAEVAQcB7wH3BO8BkwEcA+sBEgEU
        ARMB6gSOAfEBGwQaBY4BbwJJAg4BbgFFAWgBDwEOAWgBRQEOA0kBEgMTBRICEwHqAm4BEgFEARACBwHv
        AQcB7wFzAW4BkwEcAe0B6wFtARQCEwFtBI4BtgW9AbYCjgFvAhcCSQETAg4BaAFFAeoBbwGTAUQCSgJQ
        AXIJEgETARIBRAESAeoBRAERAe8BBwLvAfcBSwJ0ARwBbQH3AeoBFAISAewEjgGTARoFvQGOAW8B4wKx
        AUkBSgFJAw4BRQFoAUUBjgG2AW4CSgFQAUoH6gESARMBFQFtAeoCbgEVAREE7wFLAW4BHAGZAZMBcwHv
        ARwBEwESAW0B7QLSAasBiAGOAZMEvQEaAo4CsQGrAUoBSQEUAQ4BRAGOAbcBQAGTAWkBsQGOAbYDSgZt
        AeoBEgEUAUMC7QEcAe0BFQEPAZkB7wEcAm4BdAEHAe8CkwEcAZMB7QFtAhwEqgGpAY0DvQEaAZMBUgFv
        ARYBsQGqAkoBQwEOApMBjgGUAbYBtwGxAb0BtgG8AkoD6gFtAesBbgNKAREBbgHsAW0B7AEVAQ8BBwKZ
        AW4BkwF0Ae0B7AKTAXQBcwGTAxwB7QJ0AXUBjQHrARoDvQFYAjcDWQFKARUBDgFvApMCtwK9ARoBsQEH
        AXMCSgHqAW0BcwLrAW0C6gFKAUMBFQETAUMBEgERAQ4BBwGZAQcB7QF0AZMBdAHsAXMB6wH3AXQBkwEc
        AXQBcwF0Ae0BrQGoAa4BWAIaAr0BeQI3AXoCWQFKAUMBDgGTAQ4BvQG8Ab0BegF1ARoBvQEHBUoB6gEV
        AkoBEwESAeoBFAJtAuoBDwEOApkBBwFuA3QBbQHqAesB7wGTARwB7QFzAewBWQGQAbMBrQGuATcEGgF5
        ATgBVwKRARwBDgEPAg4BEQGOAb0BlAFZAXoBtwG2AbwDSgFtAewBbQFDAewB6wESAewBbQEUAW4B7AHq
        AUQBDwEOApkBHAFzApMBdAFtARMBbQH3ARwBdAFzAm4BWQGXAZ0BswGtAVgBkwGSAhoBWAE4AVcBlwGQ
        Aa0BDgEPAg4BDwG2Ab0BtwGaAr0BtgRKARIB6wFtARUBdAFKAUsBbgESARMBbQFuAUoBQwEQAQ4CmQEc
        Am4BcwFuAeoBFAFtAfcBdAFzA24BWQFYAngBnQGRAZkBBwEaAbwBWAE4AVcBlwGWAbMFDgEaAb0BvAK9
        ARoBUAFKAlABSgETARICbgFLAUQBSwF0AewBEgETAW4BbQJDARECmQEcARUDbgESARQB6gH3AXMEbgRZ
        AZ0BuQGRAZMBBwF0ATcBOAFZAVgBlwGWBQ4BEAEHAVACGgVQAUoBFAESAm4BSwFSAXQBeQFuARIBFAIS
        ARQBEwEUApkBkwETARQBcwFuAW0B7AHtAfcCcwNuA1kBWAGXAZYBlwFYATcCOAFSAnUBeQFXBg4BFQJQ
        AVEGUAG8A3oBeQF6AW8BbgFtARIBbQESARMCEgEUA5MBbgEVARQDFQESAfcCdAJuAewBUwHjAlkBVwFW
        AXcBlwFYA1kBUwHjAXUBWQFKBw4BSgVQAXMBUQEHARwBdQN0AW4D7ALrAhMBFAHrBJMB6wIVAeoBFAHq
        AZICeQJuAewFWQJYA1kCUwRZAkoBFAMOARECFAERAUMB6gFtAeoBEwEOAfcB7QJvAXQCbgHsAesBbQHt
        AesB7QLsAfcEkwH3ARQBFQHqARQBbQGSAXMBeQFuAusJWQFTAeMBTQRZAUoCUAEVAUkBDgFtAeoDSgJE
        AUoBRAFKAe8BvAH3AewBbgFtAesB7QHsARQB7QHsAe8DvASTAfcBFAEVAeoBFAFtAZICbgPrEFkBQgFN
        AT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD//8AAgAL
</value>
  </data>
</root>